import{_ as a,o as e,c as n,e as s}from"./app-BSX797FI.js";const t={},i=s(`<h1 id="signature-algorithm" tabindex="-1"><a class="header-anchor" href="#signature-algorithm"><span>Signature Algorithm</span></a></h1><p>The signature algorithm adds an extra layer of security by signing your API requests with a secret key.</p><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use"><span>How to Use</span></a></h2><ol><li><strong>Obtain a secret key</strong> for your account.</li><li><strong>Sign your request</strong> with the secret key.</li><li><strong>Send the signed request</strong> to the server.</li></ol><h2 id="request-with-payload" tabindex="-1"><a class="header-anchor" href="#request-with-payload"><span>Request With Payload</span></a></h2><p>If your request contains payload like this:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;foo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;baz&quot;</span><span class="token operator">:</span> <span class="token string">&quot;qux&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sort the payload&#39;s JSON keys alphabetically and compact it:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;baz&quot;</span><span class="token operator">:</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;foo&quot;</span><span class="token operator">:</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Construct the data string by concatenating the HTTP method, URL, and JSON-encoded payload in this format:</p><div class="language-plaintext line-numbers-mode" data-ext="plaintext" data-title="plaintext"><pre class="language-plaintext"><code>&lt;request-method&gt;\\n&lt;url&gt;\\n&lt;json-payload&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For example, when sending a POST request to https://games.oneone.com/demo-api/orders with the provided payload, the data string should be:</p><div class="language-plaintext line-numbers-mode" data-ext="plaintext" data-title="plaintext"><pre class="language-plaintext"><code>POST\\n
https://games.oneone.com/demo-api/orders\\n
{&quot;baz&quot;:&quot;qux&quot;,&quot;foo&quot;:&quot;bar&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Hash the data string with the secret key using the HMAC SHA256 algorithm:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;secret_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The hashed value from the example should be <code>d46691367c13a98fe93e9cb2d4de6010792bb670e2e5a63b24765e950a1c9d73</code>.</p><h2 id="request-without-payload" tabindex="-1"><a class="header-anchor" href="#request-without-payload"><span>Request Without Payload</span></a></h2><p>If your request does not contain a payload, construct the data string by concatenating the HTTP method and URL in this format:</p><div class="language-plaintext line-numbers-mode" data-ext="plaintext" data-title="plaintext"><pre class="language-plaintext"><code>&lt;request-method&gt;\\n&lt;url&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For instance, when sending a GET request to https://games.oneone.com/demo-api/orders, the data string should be:</p><div class="language-plaintext line-numbers-mode" data-ext="plaintext" data-title="plaintext"><pre class="language-plaintext"><code>GET\\n
https://games.oneone.com/demo-api/orders
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Hash the data string with the secret key using the HMAC SHA256 algorithm:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;secret_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The hashed value from the example should be <code>c6056f6fbd2ba8016373619de793b37eb4f45c975af49b2919e3809a7ffe816f</code>.</p><h2 id="x-signature-header" tabindex="-1"><a class="header-anchor" href="#x-signature-header"><span>X-Signature Header</span></a></h2><p>Once you have the hashed value, include it in the X-Signature header for every API request. For example:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">--request</span> GET <span class="token string">&#39;https://games.oneone.com/demo-api/orders&#39;</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--header</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--header</span> <span class="token string">&#39;X-Signature: d46691367c13a98fe93e9cb2d4de6010792bb670e2e5a63b24765e950a1c9d73&#39;</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--header</span> <span class="token string">&#39;Authorization: Bearer 123|lN7SSRDMDAvpJGve4VWabxanL5fZPN9vv6OCJ6IKee413ad8&#39;</span> <span class="token punctuation">\\</span>
--data-raw <span class="token string">&#39;{&quot;foo&quot;: &quot;bar&quot;, &quot;baz&quot;: &quot;qux&quot;}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This method ensures the integrity and authenticity of your API requests.</p>`,28),o=[i];function l(r,p){return e(),n("div",null,o)}const u=a(t,[["render",l],["__file","signature-algorithm.html.vue"]]),c=JSON.parse('{"path":"/signature-algorithm.html","title":"Signature Algorithm","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"How to Use","slug":"how-to-use","link":"#how-to-use","children":[]},{"level":2,"title":"Request With Payload","slug":"request-with-payload","link":"#request-with-payload","children":[]},{"level":2,"title":"Request Without Payload","slug":"request-without-payload","link":"#request-without-payload","children":[]},{"level":2,"title":"X-Signature Header","slug":"x-signature-header","link":"#x-signature-header","children":[]}],"git":{"updatedTime":1713868467000,"contributors":[{"name":"Jewei Mak","email":"jewei.mak@gmail.com","commits":1}]},"filePathRelative":"signature-algorithm.md"}');export{u as comp,c as data};
